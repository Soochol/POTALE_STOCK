{
  "permissions": {
    "allow": [
      "Bash(timeout 60 python -c \"\nfrom src.infrastructure.repositories.block1_repository import Block1Repository\nfrom src.infrastructure.database.connection import DatabaseConnection\nfrom datetime import date\n\ndb_conn = DatabaseConnection(''data/database/stock_data.db'')\nblock1_repo = Block1Repository(db_conn)\n\n# 아난티의 모든 Block1 조회\nall_blocks = block1_repo.find_by_ticker(''025980'')\n\nprint(f''아난티 전체 Block1: {len(all_blocks)}건'')\nprint(''=''*70)\n\nfor i, block in enumerate(all_blocks, 1):\n    print(f''[{i}] {block.condition_name}: {block.started_at} ~ {block.ended_at}'')\n    if block.peak_gain_ratio:\n        print(f''    수익률: +{block.peak_gain_ratio:.2f}%'')\n\")",
      "Bash(timeout 60 python -c \"\nfrom src.infrastructure.repositories.sqlite_stock_repository import SqliteStockRepository\nfrom datetime import date, timedelta\n\nrepo = SqliteStockRepository(''data/database/stock_data.db'')\n\n# 2018-03-07 전후 데이터\nstart = date(2018, 3, 1)\nend = date(2018, 3, 15)\nstocks = repo.get_stock_data(''025980'', start, end)\n\nprint(''2018년 3월 초 아난티 데이터:'')\nprint(''=''*70)\nfor s in stocks:\n    rate = ((s.high - stocks[stocks.index(s)-1].close) / stocks[stocks.index(s)-1].close * 100) if stocks.index(s) > 0 else 0\n    print(f''{s.date}: 시가={s.open:5.0f} 고가={s.high:5.0f} 저가={s.low:5.0f} 종가={s.close:5.0f} 등락률={rate:+6.2f}% 거래량={s.volume:,}'')\n\")",
      "Bash(uv pip show rich)",
      "Bash(timeout 60 python save_all_conditions.py)",
      "Bash(timeout 60 python test_block23_different_conditions.py)",
      "Bash(awk '{print $NF}')",
      "Bash(timeout 60 python bulk_collect.py --tickers 005930 --from 2025-01-17 --to 2025-01-17 --investor --concurrency 1)",
      "Bash(timeout 60 python test_pattern_models.py)",
      "Bash(timeout 60 python migrate_add_pattern_columns.py)",
      "Bash(timeout 60 python save_pattern_presets.py)",
      "Bash(timeout 60 python test_pattern_detection_ananti.py)",
      "Bash(timeout 60 python -c \"\nfrom src.infrastructure.repositories.sqlite_stock_repository import SqliteStockRepository\nfrom datetime import date\n\nrepo = SqliteStockRepository(''data/database/stock_data.db'')\nstocks = repo.get_stock_data(''025980'', date(2015, 1, 1), date(2025, 10, 18))\n\nprint(f''아난티 데이터: {len(stocks)}건'')\nif len(stocks) > 0:\n    print(f''기간: {stocks[0].date} ~ {stocks[-1].date}'')\nelse:\n    print(''데이터 없음 - 수집 필요'')\n\")"
    ],
    "deny": [],
    "ask": []
  }
}
